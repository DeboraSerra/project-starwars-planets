{"version":3,"sources":["images/Star_Wars_logo-1.png","context/MyContext.js","components/Table.js","services/fetchApi.js","context/ContextProvider.js","components/FilterByName.js","components/FilterByNumber.js","components/NumericFilters.js","components/SortColumn.js","App.js","index.js"],"names":["module","exports","MyContext","createContext","Table","data","useContext","map","planet","key","name","data-testid","rotation_period","orbital_period","diameter","climate","gravity","terrain","surface_water","population","fetchApi","a","fetch","response","json","results","ContextProvider","children","useState","planets","filterByNumericValue","order","column","sort","state","setState","useEffect","then","b","prevSt","filterByNumber","payload","forEach","comparison","value","filter","item","parseFloat","col","comp","val","sortedList","newData","unknownPop","sorted","list","filterByName","handleNameChange","target","toLowerCase","includes","setNumericFilter","id","Math","random","removeFilter","newFilter","addSort","Provider","FilterByName","className","type","onChange","placeholder","FilterByNumber","handleChange","availbleOpt","opt","some","htmlFor","onClick","disabled","length","NumericFilters","SortColumn","App","src","logo","alt","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91b2fc43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Star_Wars_logo-1.5d100186.png\";","import { createContext } from 'react';\n\nconst MyContext = createContext();\n\nexport default MyContext;\n","import React, { useContext } from 'react';\nimport MyContext from '../context/MyContext';\n\nconst Table = () => {\n  const { data } = useContext(MyContext);\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Rotation Period</th>\n          <th>Orbital Period</th>\n          <th>Diameter</th>\n          <th>Climate</th>\n          <th>Gravity</th>\n          <th>Terrain</th>\n          <th>Surface Water</th>\n          <th>Population</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((planet) => (\n          <tr key={ planet.name }>\n            <td data-testid=\"planet-name\">{planet.name}</td>\n            <td>{planet.rotation_period}</td>\n            <td>{planet.orbital_period}</td>\n            <td>{planet.diameter}</td>\n            <td>{planet.climate}</td>\n            <td>{planet.gravity}</td>\n            <td>{planet.terrain}</td>\n            <td>{planet.surface_water}</td>\n            <td>{planet.population}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","const fetchApi = async () => {\n  const endpoint = 'https://swapi-trybe.herokuapp.com/api/planets/';\n  const response = await fetch(endpoint);\n  const data = await response.json();\n  return data.results;\n};\n\nexport default fetchApi;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport fetchApi from '../services/fetchApi';\nimport MyContext from './MyContext';\n\nconst NEG_ONE = -1;\n\nconst ContextProvider = ({ children }) => {\n  const [state, setState] = useState({\n    planets: [],\n    data: [],\n    name: '',\n    filterByNumericValue: [],\n    order: {\n      column: '',\n      sort: '',\n    },\n  });\n\n  useEffect(() => {\n    fetchApi()\n      .then((response) => {\n        const data = response.sort((a, b) => {\n          if (a.name > b.name) return 1;\n          if (a.name < b.name) return NEG_ONE;\n          return 0;\n        });\n        setState((prevSt) => ({ ...prevSt, data, planets: data }));\n      });\n  }, []);\n\n  const handleNameChange = ({ target: { value } }) => {\n    setState((prevSt) => ({\n      ...prevSt,\n      name: value,\n      data: state.planets.filter(({ name }) => name.toLowerCase().includes(value.toLowerCase())),\n    }));\n  };\n\n  const filterByNumber = (payload = null) => {\n    const { planets, filterByNumericValue } = state;\n    let data = planets;\n    filterByNumericValue.forEach(({ column, comparison, value }) => {\n      switch (comparison) {\n      case 'maior que':\n        data = data.filter((item) => parseFloat(item[column]) > value);\n        break;\n      case 'menor que':\n        data = data.filter((item) => parseFloat(item[column]) < value);\n        break;\n      case 'igual a':\n        data = data.filter((item) => item[column] === value);\n        break;\n      default: data = planets;\n      }\n    });\n    if (payload) {\n      const { col, comp, val } = payload;\n      switch (comp) {\n      case 'maior que':\n        data = data.filter((item) => parseFloat(item[col]) > val);\n        break;\n      case 'menor que':\n        data = data.filter((item) => parseFloat(item[col]) < val);\n        break;\n      case 'igual a':\n        data = data.filter((item) => item[col] === val);\n        break;\n      default: data = planets;\n      }\n    }\n    setState((prevSt) => ({\n      ...prevSt,\n      data,\n    }));\n  };\n\n  useEffect(() => {\n    filterByNumber();\n  }, [state.filterByNumericValue]);\n\n  useEffect(() => {\n    const { data, order: { column, sort } } = state;\n    let sortedList = [];\n    if (column === 'population') {\n      const newData = data.filter(({ population }) => population !== 'unknown');\n      const unknownPop = data.filter(({ population }) => population === 'unknown');\n      let sorted = [];\n      if (sort === 'ASC') sorted = newData.sort((a, b) => a[column] - b[column]);\n      else sorted = newData.sort((a, b) => b[column] - a[column]);\n      sortedList = [...sorted, ...unknownPop];\n    } else {\n      let list = [];\n      if (sort === 'ASC') list = data.sort((a, b) => a[column] - b[column]);\n      else list = data.sort((a, b) => b[column] - a[column]);\n      sortedList = list;\n    }\n    setState((prevSt) => ({\n      ...prevSt,\n      data: sortedList,\n    }));\n  }, [state.order]);\n\n  const setNumericFilter = ({ column, comparison, value }) => {\n    setState((prevSt) => ({\n      ...prevSt,\n      filterByNumericValue: [\n        ...prevSt.filterByNumericValue,\n        {\n          id: Math.random(),\n          column,\n          comparison,\n          value,\n        },\n      ],\n    }));\n    const data = { col: column, comp: comparison, val: value };\n    filterByNumber(data);\n  };\n\n  const removeFilter = (id = null) => {\n    const { filterByNumericValue, planets } = state;\n    if (!id) {\n      setState((prevSt) => ({\n        ...prevSt,\n        filterByNumericValue: [],\n        data: planets,\n      }));\n    } else {\n      const newFilter = filterByNumericValue.filter((item) => item.id !== id);\n      setState((prevSt) => ({\n        ...prevSt,\n        filterByNumericValue: newFilter,\n      }));\n    }\n  };\n\n  const addSort = ({ column, sort }) => {\n    setState((prevSt) => ({\n      ...prevSt,\n      order: {\n        column,\n        sort,\n      },\n    }));\n  };\n\n  const value = {\n    data: state.data,\n    filterByName: {\n      name: state.name,\n    },\n    filterByNumericValue: state.filterByNumericValue,\n    handleNameChange,\n    setNumericFilter,\n    removeFilter,\n    addSort,\n  };\n\n  return (\n    <MyContext.Provider value={ value }>\n      {children}\n    </MyContext.Provider>\n  );\n};\n\nContextProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ContextProvider;\n","import React, { useContext } from 'react';\nimport MyContext from '../context/MyContext';\n\nconst FilterByName = () => {\n  const { filterByName: { name }, handleNameChange } = useContext(MyContext);\n  return (\n    <input\n      className=\"filter-name\"\n      type=\"text\"\n      data-testid=\"name-filter\"\n      value={ name }\n      onChange={ handleNameChange }\n      placeholder=\"Find a planet\"\n    />\n  );\n};\n\nexport default FilterByName;\n","import React, { useContext, useState } from 'react';\nimport MyContext from '../context/MyContext';\n\nconst FilterByNumber = () => {\n  const [state, setState] = useState({\n    column: 'population',\n    comparison: 'maior que',\n    value: 0,\n  });\n\n  const { setNumericFilter, filterByNumericValue } = useContext(MyContext);\n\n  const hasColumn = (column) => filterByNumericValue\n    .some((item) => item.column === column);\n\n  const handleChange = ({ target: { name, value } }) => {\n    setState((prevSt) => ({ ...prevSt, [name]: value }));\n  };\n\n  const options = ['population', 'orbital_period', 'diameter', 'rotation_period', 'surface_water'];\n\n  const availbleOpt = options.filter((opt) => !hasColumn(opt));\n\n  const handleClick = () => {\n    const { column, comparison, value } = state;\n    setNumericFilter({ column, comparison, value });\n    setState({\n      column: availbleOpt[0],\n      comparison: 'maior que',\n      value: 0,\n    });\n  };\n\n  return (\n    <section className=\"number-filter\">\n      <label htmlFor=\"column\">\n        Find\n        <select\n          name=\"column\"\n          id=\"column\"\n          data-testid=\"column-filter\"\n          value={ state.column }\n          onChange={ handleChange }\n        >\n          {availbleOpt.map((opt) => (\n            <option value={ opt }>{opt}</option>\n          ))}\n        </select>\n      </label>\n      <label htmlFor=\"comparison\">\n        That is\n        <select\n          name=\"comparison\"\n          id=\"comparison\"\n          data-testid=\"comparison-filter\"\n          value={ state.comparison }\n          onChange={ handleChange }\n        >\n          <option value=\"maior que\">maior que</option>\n          <option value=\"menor que\">menor que</option>\n          <option value=\"igual a\">igual a</option>\n        </select>\n      </label>\n      <input\n        type=\"number\"\n        data-testid=\"value-filter\"\n        name=\"value\"\n        value={ state.value }\n        onChange={ handleChange }\n      />\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={ handleClick }\n        disabled={availbleOpt.length === 0}\n      >\n        Filter\n      </button>\n    </section>\n  );\n};\n\nexport default FilterByNumber;\n","import React, { useContext } from 'react';\nimport MyContext from '../context/MyContext';\n\nconst NumericFilters = () => {\n  const { filterByNumericValue, removeFilter } = useContext(MyContext);\n  return (\n    <section className=\"filters\">\n      <button\n        type=\"button\"\n        onClick={ () => removeFilter() }\n        data-testid=\"button-remove-filters\"\n      >\n        Remove All Filters\n      </button>\n      <section className=\"filters-list\">\n        {filterByNumericValue.map(({ id, column, comparison, value }) => (\n          <p key={ id } data-testid=\"filter\" className=\"filter\">\n            <span>{`${column} ${comparison} ${value}`}</span>\n            <button\n              type=\"button\"\n              onClick={ () => removeFilter(id) }\n              className=\"delete-btn\"\n            >\n              X\n            </button>\n          </p>\n        ))}\n      </section>\n    </section>\n  );\n};\n\nexport default NumericFilters;\n","import React, { useContext, useState } from 'react';\nimport MyContext from '../context/MyContext';\n\nconst SortColumn = () => {\n  const [state, setState] = useState({\n    column: 'population',\n    sort: 'asc',\n  });\n\n  const handleChange = ({ target: { name, value } }) => {\n    setState((prevSt) => ({\n      ...prevSt,\n      [name]: value,\n    }));\n  };\n\n  const { addSort } = useContext(MyContext);\n\n  const sendSort = () => {\n    const { column, sort } = state;\n    addSort({ column, sort });\n  };\n\n  return (\n    <section className=\"sort\">\n      <label htmlFor=\"column\">\n        Select a column\n        <select\n          name=\"column\"\n          id=\"column\"\n          data-testid=\"column-sort\"\n          onChange={ handleChange }\n          value={ state.column }\n        >\n          <option value=\"population\">population</option>\n          <option value=\"orbital_period\">orbital_period</option>\n          <option value=\"diameter\">diameter</option>\n          <option value=\"rotation_period\">rotation_period</option>\n          <option value=\"surface_water\">surface_water</option>\n        </select>\n      </label>\n      <section onChange={ handleChange } className=\"radio-sort\">\n        <label htmlFor=\"asc\">\n          <input\n            type=\"radio\"\n            name=\"sort\"\n            id=\"asc\"\n            value=\"ASC\"\n            data-testid=\"column-sort-input-asc\"\n          />\n          Upward\n        </label>\n        <label htmlFor=\"desc\">\n          <input\n            type=\"radio\"\n            name=\"sort\"\n            id=\"desc\"\n            value=\"DESC\"\n            data-testid=\"column-sort-input-desc\"\n          />\n          Downward\n        </label>\n      </section>\n      <button\n        type=\"button\"\n        data-testid=\"column-sort-button\"\n        onClick={ sendSort }\n      >\n        Sort data\n      </button>\n    </section>\n  );\n};\n\nexport default SortColumn;\n","import React from 'react';\nimport './App.css';\nimport Table from './components/Table';\nimport ContextProvider from './context/ContextProvider';\nimport FilterByName from './components/FilterByName';\nimport FilterByNumber from './components/FilterByNumber';\nimport NumericFilters from './components/NumericFilters';\nimport SortColumn from './components/SortColumn';\nimport logo from './images/Star_Wars_logo-1.png';\n\nconst App = () => (\n  <ContextProvider>\n    <div className=\"stars\" />\n    <div className=\"img-sect perspective\">\n      <img className=\"fade\" src={ logo } alt=\"Star Wars Planets\" />\n    </div>\n    <div className=\"filter-selectors\">\n      <FilterByName />\n      <FilterByNumber />\n      <SortColumn />\n    </div>\n    <NumericFilters />\n    <Table />\n  </ContextProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}